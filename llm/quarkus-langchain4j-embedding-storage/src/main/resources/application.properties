quarkus.log.category.\"io.quarkiverse.langchain4j\".level=TRACE
quarkus.log.category.\"io.quarkiverse.langchain4j\".min-level=TRACE

# REST client logging, if needed
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=10000
quarkus.log.category.\"org.jboss.resteasy.reactive.client.logging\".level=DEBUG

# REDIS
quarkus.langchain4j.redis.dimension=384
quarkus.redis.devservices.image-name=redis/redis-stack:latest
quarkus.redis.devservices.port=6379
quarkus.langchain4j.redis.metadata-fields=k1,k3

# PGVECTOR
# to run the db manually:
# docker run --rm -p 5432:5432 -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=postgres ankane/pgvector:v0.5.1
quarkus.datasource.devservices.image-name=ankane/pgvector:v0.5.1
quarkus.langchain4j.pgvector.dimension=384
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
%prod.quarkus.datasource.password=postgres
%prod.quarkus.datasource.username=postgres

# CHROMA
# TODO

# PINECONE
# just make sure that you have these as env properties:
#QUARKUS_LANGCHAIN4J_PINECONE_ENVIRONMENT
#QUARKUS_LANGCHAIN4J_PINECONE_API_KEY
#QUARKUS_LANGCHAIN4J_PINECONE_PROJECT_ID
#QUARKUS_LANGCHAIN4J_PINECONE_INDEX_NAME

# MILVUS (EXTENSION NOT FINISHED YET)
# TODO: replace with dev services
quarkus.langchain4j.milvus.dimension=384
# milvus from docker-compose occupies 9000
quarkus.grpc.server.port=9002
quarkus.grpc.clients.milvus.host=localhost
quarkus.grpc.clients.milvus.port=19530
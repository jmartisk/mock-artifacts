#quarkus.hibernate-orm.log.sql=true

quarkus.smallrye-graphql.ui.always-include=true
quarkus.application.name=acmeshop

# logging
#quarkus.log.min-level=TRACE
#quarkus.log.category.\"io.smallrye.graphql\".level=TRACE
#quarkus.log.category.\"io.quarkus.smallrye.graphql\".level=TRACE

# Run a postgres database for prod mode using:
# docker run --rm --name postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=postgres -p 5432:5432 docker.io/library/postgres:12.2
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
%prod.quarkus.datasource.username=postgres
%prod.quarkus.datasource.password=postgres
%prod.quarkus.hibernate-orm.database.generation=update

# To use OpenTelemetry:
# - add the quarkus-opentelemetry extension
# - run Jaeger using `docker-compose up`
# - uncomment the following config property
# then find the Jaeger UI at http://localhost:16686/
#quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317

quarkus.smallrye-graphql.schema-include-directives=true

quarkus.http.auth.permission.mypermission.paths=/graphql
quarkus.http.auth.permission.mypermission.policy=authenticated
quarkus.http.auth.permission.mypermission.roles-allowed=user

quarkus.keycloak.devservices.port=41221
